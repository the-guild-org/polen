name: "Run Step"
description: "Run a TypeScript workflow step from .github/steps/<name>.ts"
# TODO: Convert to JavaScript action when GitHub supports Node 24 in 'using' field
# This would eliminate the need for GITHUB_OUTPUT workarounds and allow direct output passing
# See: https://github.com/orgs/community/discussions/160454
inputs:
  name:
    description: "The name of the workflow step"
    required: true
  path:
    description: "Explicit path to the step module (overrides discovery)"
    required: false
    default: ""
  workflow:
    description: "The workflow name for step discovery (defaults to github.workflow)"
    required: false
    default: ""
  inputs:
    description: "JSON string of inputs for the step"
    required: false
    default: "{}"
  previous:
    description: "Outputs from previous steps (e.g. toJSON(steps.previous.outputs))"
    required: false
    default: "{}"
  github_token:
    description: "GitHub token for API access"
    required: false
outputs:
  json:
    description: "JSON-encoded outputs from the step"
    value: ${{ steps.run.outputs.json }}
runs:
  using: "composite"
  steps:
    - name: Run workflow step
      id: run
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        STEP_INPUTS: ${{ inputs.inputs }}
        STEP_PREVIOUS: ${{ inputs.previous }}
      run: |
        # Use explicit workflow name if provided, otherwise fall back to github.workflow
        WORKFLOW_NAME="${{ inputs.workflow }}"
        if [ -z "$WORKFLOW_NAME" ]; then
          WORKFLOW_NAME="${{ github.workflow }}"
        fi
        PATH_OVERRIDE="${{ inputs.path }}"

        # Create a temporary file for outputs
        OUTPUT_FILE=$(mktemp)

        # Run the step with output file environment variable
        GITHUB_OUTPUT="$OUTPUT_FILE" node --no-warnings --experimental-transform-types ./src/lib/github-actions/cli.ts ${{ inputs.name }} "$WORKFLOW_NAME" "$PATH_OVERRIDE" "$STEP_INPUTS" "$STEP_PREVIOUS"

        # Copy outputs to the real GitHub output file
        if [ -f "$OUTPUT_FILE" ]; then
          cat "$OUTPUT_FILE" >> $GITHUB_OUTPUT
          rm "$OUTPUT_FILE"
        fi
