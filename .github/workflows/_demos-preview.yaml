name: demos-preview

on:
  workflow_call:
    inputs:
      action:
        description: "The PR action (opened, synchronize, reopened, closed)"
        required: true
        type: string
      pr-number:
        description: "Pull request number"
        required: true
        type: number
      head-ref:
        description: "Head branch reference"
        required: false
        type: string
      head-sha:
        description: "Head commit SHA"
        required: false
        type: string

concurrency:
  group: pr-preview-${{ inputs.pr-number }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  deploy:
    if: inputs.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build Polen
        run: pnpm build

      - name: Re-install to link workspace packages
        run: pnpm install

      - name: Build demos landing page
        run: node ./scripts/build-demos-index.ts --basePath "/polen/pr-${{ inputs.pr-number }}/" --prNumber "${{ inputs.pr-number }}" --currentSha "${{ inputs.head-sha }}"

      - name: Build demos
        run: |
          # Build Pokemon demo for latest
          pnpm --dir examples/pokemon build --base "/polen/pr-${{ inputs.pr-number }}/latest/pokemon/"

          # Create directory for latest build
          mkdir -p dist-preview-latest
          cp -r examples/pokemon/build dist-preview-latest/pokemon

          # Build Pokemon demo for commit-specific path
          pnpm --dir examples/pokemon build --base "/polen/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/pokemon/"

          # Create directory for commit-specific build
          mkdir -p dist-preview-commit
          cp -r examples/pokemon/build dist-preview-commit/pokemon

          # GitHub demo disabled - schema too large for efficient SSG
          # pnpm --dir examples/github build --base "/polen/pr-${{ inputs.pr-number }}/latest/github/"

      - name: Prepare PR preview for deployment
        run: |
          # Create deployment directory structure
          mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/latest
          mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}

          # Copy landing page to PR root
          cp dist-demos/index.html gh-pages-deploy/pr-${{ inputs.pr-number }}/index.html

          # Copy latest build
          cp -r dist-preview-latest/* gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/

          # Create redirect from /latest/ to PR root
          cat > gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting...</title>
            <meta http-equiv="refresh" content="0; url=/polen/pr-${{ inputs.pr-number }}/">
            <script>window.location.replace("/polen/pr-${{ inputs.pr-number }}/");</script>
          </head>
          <body>
            <p>Redirecting to <a href="/polen/pr-${{ inputs.pr-number }}/">/pr-${{ inputs.pr-number }}/</a>...</p>
          </body>
          </html>
          EOF

          # Copy commit-specific build
          cp -r dist-preview-commit/* gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/
          
          # Create redirects for direct demo URLs
          for example in pokemon; do
            mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/$example
            cat > gh-pages-deploy/pr-${{ inputs.pr-number }}/$example/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting...</title>
            <meta http-equiv="refresh" content="0; url=/polen/pr-${{ inputs.pr-number }}/latest/$example/">
            <script>window.location.replace("/polen/pr-${{ inputs.pr-number }}/latest/$example/");</script>
          </head>
          <body>
            <p>Redirecting to <a href="/polen/pr-${{ inputs.pr-number }}/latest/$example/">/pr-${{ inputs.pr-number }}/latest/$example/</a>...</p>
          </body>
          </html>
          EOF
          done

          # Add PR-specific metadata to both deployments
          echo "PR #${{ inputs.pr-number }}" > gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/PR_INFO.txt
          echo "Branch: ${{ inputs.head-ref }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/PR_INFO.txt
          echo "Commit: ${{ inputs.head-sha }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/PR_INFO.txt

          echo "PR #${{ inputs.pr-number }}" > gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/PR_INFO.txt
          echo "Branch: ${{ inputs.head-ref }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/PR_INFO.txt
          echo "Commit: ${{ inputs.head-sha }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/PR_INFO.txt

          # Get all PR deployments from gh-pages branch
          PR_DEPLOYMENTS="[]"

          # Fetch gh-pages to check existing PRs
          git fetch origin gh-pages:refs/remotes/origin/gh-pages || true

          # Get all PR directories from gh-pages
          PR_DIRS=$(git ls-tree -d --name-only origin/gh-pages | grep '^pr-' | sort -V || echo "")

          if [ -n "$PR_DIRS" ]; then
            PR_LIST=""
            for dir in $PR_DIRS; do
              PR_NUM=$(echo "$dir" | sed 's/pr-//')
              if [ -n "$PR_LIST" ]; then PR_LIST="$PR_LIST,"; fi
              PR_LIST="$PR_LIST{\"number\":\"$PR_NUM\"}"
            done
            PR_DEPLOYMENTS="[$PR_LIST]"
          fi

          # Build PR index page using CLI
          node ./scripts/build-demos-index.ts --mode pr-index --prDeployments "$PR_DEPLOYMENTS"

          # Copy the generated PR index to deployment directory
          cp dist-demos/pr-index.html gh-pages-deploy/pr-index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages-deploy
          destination_dir: .
          keep_files: true # Keep existing PR previews
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Add pull request #${{ inputs.pr-number }} commit ${{ inputs.head-sha }}"

      - name: Get previous deployments for this PR
        id: get-prev-pr-deployments
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ inputs.pr-number }}
          CURRENT_SHA: ${{ inputs.head-sha }}
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/scripts/get-previous-pr-deployments.js')
            return script({ github, context, core })

      - name: Get short SHA
        id: short-sha
        run: echo "sha=$(echo '${{ inputs.head-sha }}' | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Find existing comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ inputs.pr-number }}
          comment-author: 'github-actions[bot]'
          body-includes: '## Demos Preview'

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ inputs.pr-number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## Demos Preview

            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/

            #### Pokemon
            - [Latest](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/latest/pokemon/) â€“ [`${{ steps.short-sha.outputs.sha }}`](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/pokemon/)
            - Previous: ${{ steps.get-prev-pr-deployments.outputs.deployment_links }}

