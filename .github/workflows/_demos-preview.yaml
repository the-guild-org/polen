name: demos-preview

on:
  workflow_call:
    inputs:
      action:
        description: "The PR action (opened, synchronize, reopened, closed)"
        required: true
        type: string
      pr-number:
        description: "Pull request number"
        required: true
        type: number
      head-ref:
        description: "Head branch reference"
        required: false
        type: string
      head-sha:
        description: "Head commit SHA"
        required: false
        type: string

concurrency:
  group: pr-preview-${{ inputs.pr-number }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  deploy:
    if: inputs.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build Polen
        run: pnpm build

      - name: Re-install to link workspace packages
        run: pnpm install

      - name: Build demos landing page
        run: node ./scripts/build-demos-index.ts --basePath "/polen/pr-${{ inputs.pr-number }}/" --prNumber "${{ inputs.pr-number }}" --currentSha "${{ inputs.head-sha }}"

      - name: Build demos
        run: |
          # Get list of examples that are enabled for demos
          EXAMPLES=$(node ./.github/scripts/tools/get-demo-examples.js)
          echo "Found demo-enabled examples: $EXAMPLES"
          
          # Build once for the commit-specific path
          for example in $EXAMPLES; do
            echo "Building $example demo..."
            pnpm --dir examples/$example build --base "/polen/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/$example/"
          done

      - name: Prepare PR preview for deployment
        run: |
          # Create deployment directory structure
          mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/latest
          mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}

          # Copy landing page to PR root
          cp dist-demos/index.html gh-pages-deploy/pr-${{ inputs.pr-number }}/index.html

          # Get list of examples that are enabled for demos
          EXAMPLES=$(node ./.github/scripts/tools/get-demo-examples.js)
          
          # Copy builds to commit-specific path
          for example in $EXAMPLES; do
            if [ -d "examples/$example/build" ]; then
              cp -r examples/$example/build gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/$example
            fi
          done
          
          # Copy to latest (will update paths below)
          cp -r gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/* gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/
          
          # Update all base paths in the latest copy
          echo "Updating base paths from /${{ inputs.head-sha }}/ to /latest/"
          find gh-pages-deploy/pr-${{ inputs.pr-number }}/latest -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" \) | while read file; do
            sed -i "s|/polen/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/|/polen/pr-${{ inputs.pr-number }}/latest/|g" "$file"
          done
          
          # Create redirect from /latest/ to PR root
          # This provides the PR landing page when accessing /latest/
          cat > gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting...</title>
            <meta http-equiv="refresh" content="0; url=/polen/pr-${{ inputs.pr-number }}/">
            <script>window.location.replace("/polen/pr-${{ inputs.pr-number }}/");</script>
          </head>
          <body>
            <p>Redirecting to <a href="/polen/pr-${{ inputs.pr-number }}/">/pr-${{ inputs.pr-number }}/</a>...</p>
          </body>
          </html>
          EOF
          
          # Create redirects for direct demo URLs
          # Examples:
          # - /polen/pr-123/pokemon/ → /polen/pr-123/latest/pokemon/
          # This allows users to access the latest PR build without knowing the SHA
          for example in $EXAMPLES; do
            mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/$example
            cat > gh-pages-deploy/pr-${{ inputs.pr-number }}/$example/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>Redirecting...</title>
            <meta http-equiv="refresh" content="0; url=/polen/pr-${{ inputs.pr-number }}/latest/$example/">
            <script>window.location.replace("/polen/pr-${{ inputs.pr-number }}/latest/$example/");</script>
          </head>
          <body>
            <p>Redirecting to <a href="/polen/pr-${{ inputs.pr-number }}/latest/$example/">/pr-${{ inputs.pr-number }}/latest/$example/</a>...</p>
          </body>
          </html>
          EOF
          done

          # Add PR-specific metadata to both deployments
          echo "PR #${{ inputs.pr-number }}" > gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/PR_INFO.txt
          echo "Branch: ${{ inputs.head-ref }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/PR_INFO.txt
          echo "Commit: ${{ inputs.head-sha }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/PR_INFO.txt

          echo "PR #${{ inputs.pr-number }}" > gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/PR_INFO.txt
          echo "Branch: ${{ inputs.head-ref }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/PR_INFO.txt
          echo "Commit: ${{ inputs.head-sha }}" >> gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/PR_INFO.txt

          # Build PR index will be handled by the script step below
      
      - name: Update PR index
        uses: actions/github-script@v7
        env:
          MODE: pr-index
          OUTPUT_DIR: gh-pages-deploy
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/scripts/steps/update-demos-index.js')
            return script({ github, context, core, exec })

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages-deploy
          destination_dir: .
          keep_files: true # Keep existing PR previews
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Add pull request #${{ inputs.pr-number }} commit ${{ inputs.head-sha }}"

      - name: Get previous deployments for this PR
        id: get-prev-pr-deployments
        uses: actions/github-script@v7
        env:
          PR_NUMBER: ${{ inputs.pr-number }}
          CURRENT_SHA: ${{ inputs.head-sha }}
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/scripts/steps/get-previous-pr-deployments.js')
            return script({ github, context, core })

      - name: Get short SHA
        id: short-sha
        run: echo "sha=$(echo '${{ inputs.head-sha }}' | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Find existing comment
        uses: peter-evans/find-comment@v3
        id: find-comment
        with:
          issue-number: ${{ inputs.pr-number }}
          comment-author: 'github-actions[bot]'
          body-includes: '## Demos Preview'

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ inputs.pr-number }}
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## Demos Preview

            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/

            #### Pokemon
            - [Latest](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/latest/pokemon/) – [`${{ steps.short-sha.outputs.sha }}`](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/pokemon/)
            - Previous: ${{ steps.get-prev-pr-deployments.outputs.deployment_links }}

