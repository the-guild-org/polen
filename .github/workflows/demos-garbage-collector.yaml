name: demos-garbage-collector

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC
  workflow_dispatch: # Allow manual runs

permissions:
  contents: write

jobs:
  collect-garbage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          fetch-depth: 0 # Need full history to check commit dates

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24.1.x'

      - name: Identify deployments to remove
        id: identify
        uses: actions/github-script@v7
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/scripts/identify-deployments-to-remove.js')
            return script({ github, context, core })

      - name: Remove old deployments
        if: steps.identify.outputs.toRemove != '{"trunk":[],"prs":[]}'
        run: |
          TO_REMOVE='${{ steps.identify.outputs.toRemove }}'
          echo "Deployments to remove: $TO_REMOVE"
          
          # Parse JSON
          TRUNK_DIRS=$(echo "$TO_REMOVE" | jq -r '.trunk[]')
          PR_DIRS=$(echo "$TO_REMOVE" | jq -r '.prs[]')
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Remove trunk deployments
          for dir in $TRUNK_DIRS; do
            if [ -d "$dir" ]; then
              echo "Removing trunk deployment: $dir"
              git rm -rf "$dir"
            fi
          done
          
          # Remove PR deployments
          for dir in $PR_DIRS; do
            if [ -d "$dir" ]; then
              echo "Removing PR deployment: $dir"
              git rm -rf "$dir"
            fi
          done
          
          # Commit if there are changes
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "chore: garbage collect old deployments
            
            Removed:
            - Trunk: $TRUNK_DIRS
            - PRs: $PR_DIRS"
            git push
          else
            echo "No deployments to remove"
          fi