name: demos-rebuild

on:
  workflow_dispatch:
    inputs:
      since_version:
        description: 'Rebuild all versions since this version (inclusive). Leave empty to only rebuild dist-tags.'
        required: false
        type: string
      skip_versions:
        description: 'Comma-separated list of versions to skip (e.g. "0.8.1,0.8.2")'
        required: false
        type: string
        default: ''
      rebuild_dist_tags:
        description: 'Rebuild latest and next dist-tags'
        required: true
        type: boolean
        default: true
      dry_run:
        description: 'Dry run - show what would be built without actually building'
        required: false
        type: boolean
        default: false

permissions:
  contents: write
  pages: write

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      versions_to_build: ${{ steps.plan.outputs.versions }}
      dist_tags: ${{ steps.plan.outputs.dist_tags }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '24.1.x'

      - name: Install dependencies
        run: npm install semver

      - name: Plan rebuild
        id: plan
        uses: actions/github-script@v7
        env:
          INPUT_SINCE_VERSION: ${{ inputs.since_version }}
          INPUT_SKIP_VERSIONS: ${{ inputs.skip_versions }}
          INPUT_REBUILD_DIST_TAGS: ${{ inputs.rebuild_dist_tags }}
        with:
          script: |
            const semver = require('semver')
            const { default: script } = await import('${{ github.workspace }}/.github/workflow-steps/demos-rebuild/plan-rebuild.js')
            return script({ github, context, core, exec, semver })

  rebuild:
    needs: plan
    if: ${{ !inputs.dry_run && (needs.plan.outputs.versions_to_build != '[]' || needs.plan.outputs.dist_tags != '{}') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build Polen
        run: pnpm build

      - name: Install workflow dependencies
        run: |
          # Install in a separate directory to avoid package.json issues
          mkdir -p /tmp/workflow-deps
          cd /tmp/workflow-deps
          npm init -y
          npm install semver
          echo "NODE_PATH=/tmp/workflow-deps/node_modules" >> $GITHUB_ENV

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Rebuild demos
        uses: actions/github-script@v7
        env:
          VERSIONS_TO_BUILD: ${{ needs.plan.outputs.versions_to_build }}
          DIST_TAGS: ${{ needs.plan.outputs.dist_tags }}
        with:
          script: |
            const fs = require('fs').promises
            const semver = require('semver')
            const { default: script } = await import('${{ github.workspace }}/.github/workflow-steps/demos-rebuild/rebuild-demos.js')
            return script({ github, context, core, exec, semver, fs })

      - name: Update demos index
        uses: actions/github-script@v7
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/scripts/steps/update-demos-index.js')
            return script({ github, context, core, exec })

      - name: Commit and deploy
        run: |
          cd gh-pages
          
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add .
          
          if [[ -n $(git status --porcelain) ]]; then
            VERSIONS='${{ needs.plan.outputs.versions_to_build }}'
            DIST_TAGS='${{ needs.plan.outputs.dist_tags }}'
            
            MESSAGE="chore: rebuild demos"
            
            if [ "$VERSIONS" != "[]" ]; then
              MESSAGE="$MESSAGE for versions: $(echo $VERSIONS | jq -r 'join(", ")')"
            fi
            
            if [ "$DIST_TAGS" != "{}" ]; then
              MESSAGE="$MESSAGE and dist-tags"
            fi
            
            git commit -m "$MESSAGE"
            git push origin gh-pages
          else
            echo "No changes to deploy"
          fi

  summary:
    needs: [plan, rebuild]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Summary
        uses: actions/github-script@v7
        env:
          VERSIONS_TO_BUILD: ${{ needs.plan.outputs.versions_to_build }}
          DIST_TAGS: ${{ needs.plan.outputs.dist_tags }}
          INPUT_DRY_RUN: ${{ inputs.dry_run }}
        with:
          script: |
            const { default: script } = await import('${{ github.workspace }}/.github/workflow-steps/demos-rebuild/summary.js')
            return script({ github, context, core, exec })