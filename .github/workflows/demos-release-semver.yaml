name: demos-release-semver

on:
  release:
    types: [published, edited]
  workflow_dispatch:
    inputs:
      tag:
        description: "Release semver tag to build demos for (e.g. 1.2.0, 0.8.0-next.1, ...)"
        required: true
        type: string

permissions:
  contents: write
  pages: write
  statuses: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || inputs.tag }}

      - name: Setup
        uses: ./.github/actions/setup

      - name: Update workflow scripts from main
        uses: ./.github/actions/use-latest-ci

      - name: Extract release info
        id: release
        uses: ./.github/actions/run-workflow-step
        with:
          step: demos-release-semver/extract-release-info.ts
          inputs: |
            {
              "github_event_name": ${{ toJSON(github.event_name) }},
              "input_tag": ${{ toJSON(inputs.tag) }},
              "github_release_tag_name": ${{ toJSON(github.event.release.tag_name) }},
              "github_release_prerelease": ${{ toJSON(github.event.release.prerelease) }},
              "github_event_action": ${{ toJSON(github.event.action) }}
            }

      - name: Build Polen
        if: steps.release.outputs.needs_build == 'true'
        run: pnpm build

      - name: Re-install to link workspace packages
        if: steps.release.outputs.needs_build == 'true'
        run: pnpm install

      - name: Build demos for release
        if: steps.release.outputs.needs_build == 'true'
        uses: ./.github/actions/run-workflow-step
        with:
          step: demos-release-semver/build-demos.ts
          inputs: |
            {
              "tag": ${{ toJSON(steps.release.outputs.tag) }},
              "actual_tag": ${{ toJSON(steps.release.outputs.actual_tag) }},
              "is_dist_tag": ${{ toJSON(steps.release.outputs.is_dist_tag) }}
            }

      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages

      - name: Deploy release demos
        if: steps.release.outputs.needs_build == 'true'
        run: |
          TAG="${{ steps.release.outputs.actual_tag }}"

          # Get list of examples that are enabled for demos
          EXAMPLES=$(node --no-warnings ./.github/scripts/tools/get-demo-examples.ts)

          # Copy built demos to semver paths
          for example in $EXAMPLES; do
            if [ -d "examples/$example/build" ]; then
              mkdir -p gh-pages/$TAG/$example
              cp -r examples/$example/build/* gh-pages/$TAG/$example/
            fi
          done

      - name: Create demo redirects
        if: steps.release.outputs.needs_build == 'true'
        uses: ./.github/actions/run-workflow-step
        with:
          step: demos-release-semver/create-demo-redirects.ts
          inputs: |
            {
              "gh_pages_dir": "gh-pages"
            }

      - name: Update dist-tag content
        if: steps.release.outputs.needs_build == 'true'
        run: |
          TAG="${{ steps.release.outputs.actual_tag }}"
          IS_PRERELEASE="${{ steps.release.outputs.is_prerelease }}"

          # Determine which dist-tag to update
          if [[ "$IS_PRERELEASE" == "true" ]]; then
            DIST_TAG="next"
          else
            DIST_TAG="latest"
          fi

          cd gh-pages

          # Remove old dist-tag directory if it exists
          if [ -d "$DIST_TAG" ]; then
            echo "Removing old $DIST_TAG directory"
            rm -rf "$DIST_TAG"
          fi

          # Copy the semver deployment to the dist-tag name
          echo "Copying $TAG to $DIST_TAG"
          cp -r "$TAG" "$DIST_TAG"

          # Update all base paths in the copied files
          echo "Updating base paths from /$TAG/ to /$DIST_TAG/"

          find "$DIST_TAG" -type f \( -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" \) | while read file; do
            # Use perl for more reliable find/replace with special characters
            perl -i -pe "s|/polen/\Q$TAG\E/|/polen/$DIST_TAG/|g" "$file"
          done

          echo "âœ… Successfully updated $DIST_TAG with content from $TAG"

      - name: Update demos index
        uses: ./.github/actions/run-workflow-step
        with:
          step: shared/update-demos-index.ts

      - name: Commit and deploy
        run: |
          cd gh-pages

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add .

          if [[ -n $(git status --porcelain) ]]; then
            # Use the original tag name for the commit message
            TAG="${{ steps.release.outputs.tag }}"
            ACTION="${{ steps.release.outputs.action }}"

            if [[ "$ACTION" == "edited" ]]; then
              git commit -m "chore: update demos for edited release $TAG"
            else
              git commit -m "chore: deploy demos for release $TAG"
            fi

            git push origin gh-pages
          else
            echo "No changes to deploy"
          fi

      - name: Add demos link to commit
        if: steps.release.outputs.needs_build == 'true'
        uses: ./.github/actions/run-workflow-step
        with:
          step: demos-release-semver/add-demos-link.ts
          inputs: |
            {
              "actual_tag": ${{ toJSON(steps.release.outputs.actual_tag) }},
              "github_event_name": ${{ toJSON(github.event_name) }},
              "github_release_target_commitish": ${{ toJSON(github.event.release.target_commitish) }}
            }
