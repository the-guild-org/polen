name: examples-preview

on:
  workflow_call:
    inputs:
      action:
        description: "The PR action (opened, synchronize, reopened, closed)"
        required: true
        type: string
      pr-number:
        description: "Pull request number"
        required: true
        type: number
      head-ref:
        description: "Head branch reference"
        required: false
        type: string
      head-sha:
        description: "Head commit SHA"
        required: false
        type: string

concurrency:
  group: pr-preview-${{ inputs.pr-number }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  deploy:
    if: inputs.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build Polen
        run: pnpm build

      - name: Re-install to link workspace packages
        run: pnpm install

      - name: Build demos landing page
        run: pnpm molt build-demos-index "/polen/pr-${{ inputs.pr-number }}/" "${{ inputs.pr-number }}" "${{ inputs.head-sha }}"

      - name: Build demos
        run: |
          # Build Pokemon demo with base path for PR preview (latest)
          pnpm --dir examples/pokemon build --base "/polen/pr-${{ inputs.pr-number }}/latest/pokemon/"

          # GitHub demo disabled - schema too large for efficient SSG
          # pnpm --dir examples/github build --base "/polen/pr-${{ inputs.pr-number }}/latest/github/"

      - name: Prepare preview directory
        run: |
          mkdir -p dist-preview
          cp -r dist-demos/* dist-preview/
          cp -r examples/pokemon/build dist-preview/pokemon
          # cp -r examples/github/build dist-preview/github

          # Add PR-specific metadata
          echo "PR #${{ inputs.pr-number }}" > dist-preview/PR_INFO.txt
          echo "Branch: ${{ inputs.head-ref }}" >> dist-preview/PR_INFO.txt
          echo "Commit: ${{ inputs.head-sha }}" >> dist-preview/PR_INFO.txt

      - name: Prepare PR preview for deployment
        run: |
          # Create deployment directory structure
          mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/latest
          mkdir -p gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}

          # Copy landing page to PR root
          cp dist-demos/index.html gh-pages-deploy/pr-${{ inputs.pr-number }}/index.html

          # Copy demo files to both latest and commit-specific directories
          # Remove the landing page from the preview directory before copying
          rm -f dist-preview/index.html
          cp -r dist-preview/* gh-pages-deploy/pr-${{ inputs.pr-number }}/latest/
          cp -r dist-preview/* gh-pages-deploy/pr-${{ inputs.pr-number }}/${{ inputs.head-sha }}/

          # Create a simple PR index page
          cat > gh-pages-deploy/pr-index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Polen PR Previews</title>
            <style>
              body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                max-width: 1200px;
                margin: 0 auto;
                padding: 2rem;
                background: #f9fafb;
              }
              h1 { color: #111827; }
              .pr-list {
                display: grid;
                gap: 1rem;
                margin-top: 2rem;
              }
              .pr-item {
                background: white;
                padding: 1.5rem;
                border-radius: 8px;
                box-shadow: 0 1px 3px rgba(0,0,0,0.1);
                display: flex;
                justify-content: space-between;
                align-items: center;
              }
              .pr-number {
                font-weight: bold;
                color: #3b82f6;
              }
              .pr-link {
                background: #10b981;
                color: white;
                text-decoration: none;
                padding: 0.5rem 1rem;
                border-radius: 6px;
                font-weight: 500;
              }
              .pr-link:hover {
                background: #059669;
              }
              .back-link {
                color: #3b82f6;
                text-decoration: none;
                display: inline-flex;
                align-items: center;
                gap: 0.5rem;
                margin-bottom: 1rem;
              }
              .back-link:hover {
                text-decoration: underline;
              }
            </style>
          </head>
          <body>
            <a href="/" class="back-link">
              <svg width="20" height="20" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
              Back to main demos
            </a>
            <h1>Polen PR Previews</h1>
            <p>Preview deployments for open pull requests.</p>
            <div class="pr-list">
          EOF

          # Add all PR directories to index
          for dir in pr-*/; do
            if [ -d "$dir" ] && [ "$dir" != "pr-*/" ]; then
              PR_NUM=$(echo "$dir" | sed 's/pr-\([0-9]*\)\//\1/')
              echo "<div class='pr-item'>" >> pr-index.html
              echo "  <span class='pr-number'>PR #$PR_NUM</span>" >> pr-index.html
              echo "  <a href='/$dir' class='pr-link'>View Preview â†’</a>" >> pr-index.html
              echo "</div>" >> pr-index.html
            fi
          done

          echo "</div></body></html>" >> gh-pages-deploy/pr-index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages-deploy
          destination_dir: .
          keep_files: true # Keep existing PR previews
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
          commit_message: "Examples deployed for #${{ inputs.pr-number }}"

      - name: Get previous deployments for this PR
        id: get-pr-deployments
        run: |
          # Fetch gh-pages branch to check existing deployments
          git fetch origin gh-pages:refs/remotes/origin/gh-pages || true
          
          # Get list of commit deployments for this PR
          PR_DIR="pr-${{ inputs.pr-number }}"
          COMMIT_DIRS=""
          
          if git ls-tree -d --name-only "origin/gh-pages:$PR_DIR" 2>/dev/null | grep -E '^[0-9a-f]{7,40}$' > /dev/null; then
            COMMIT_DIRS=$(git ls-tree -d --name-only "origin/gh-pages:$PR_DIR" 2>/dev/null | grep -E '^[0-9a-f]{7,40}$' | sort -r || echo "")
          fi
          
          # Format as markdown links
          DEPLOYMENT_LINKS=""
          if [ -n "$COMMIT_DIRS" ]; then
            for commit in $COMMIT_DIRS; do
              # Skip current commit since it's already shown as latest
              if [ "$commit" != "${{ inputs.head-sha }}" ]; then
                SHORT_SHA=$(echo "$commit" | cut -c1-7)
                DEPLOYMENT_LINKS="${DEPLOYMENT_LINKS}- [\`${SHORT_SHA}\`](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${PR_DIR}/${commit}/)\n"
              fi
            done
          fi
          
          # Add current deployment at the top
          CURRENT_SHA=$(echo "${{ inputs.head-sha }}" | cut -c1-7)
          DEPLOYMENT_LINKS="- [\`${CURRENT_SHA}\`](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${PR_DIR}/${{ inputs.head-sha }}/) _(current)_\n${DEPLOYMENT_LINKS}"
          
          # Save to output
          echo "deployment_links<<EOF" >> $GITHUB_OUTPUT
          echo -e "$DEPLOYMENT_LINKS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.pr-number }}
          body: |
            ## Demos Preview Deployed

            **Landing Page:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/

            #### Direct Links

            - [Pokemon (Latest)](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-${{ inputs.pr-number }}/latest/pokemon/)

            <details>
            <summary>Previous deployments</summary>
            
            ${{ steps.get-pr-deployments.outputs.deployment_links }}
            
            </details>

            #### Notes

            - This preview will be updated automatically when you push new commits.
            - Each commit is preserved at its own URL for permanent reference.
          comment-tag: polen-preview

  cleanup:
    if: inputs.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Remove PR preview
        run: |
          if [ -d "pr-${{ inputs.pr-number }}" ]; then
            git rm -rf "pr-${{ inputs.pr-number }}"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git commit -m "Remove PR #${{ inputs.pr-number }} preview"
            git push
          fi

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ inputs.pr-number }}
          body: |
            ðŸ§¹ Preview deployment for PR #${{ inputs.pr-number }} has been cleaned up.
